import cv2
import numpy as np

from cozmo_fsm import *

class SpiralScan(StateMachineProgram):
    def __init__(self):
        super().__init__(viewer_crosshairs=True, particle_viewer=True)
        self.patches = None
        self.iterVal = 0
        self.startDistance = 10
        self.deltaDistance = 10

    def start(self):
        super().start()
        robot.camera.color_image_enabled = True

    class GrabPatch(StateNode):
        def start(self,event=None):
            super().start(event)
            if isinstance(event, DataEvent):
                value = event.data
                self.parent.iterVal = value
            img = np.array(self.robot.world.latest_image.raw_image)
            self.parent.patch = img[115:125, 155:165, :]
            patch2 = cv2.cvtColor(self.parent.patch, cv2.COLOR_RGB2BGR)
            patch2 = np.expand_dims(patch2, 0)
            if value == 0:
                self.parent.patches = patch2
            else:
                self.parent.patches = np.append(self.parent.patches, patch2, axis=0)
            print(value, self.parent.patches.shape)
            self.post_completion()

    class SavePatches(StateNode):
        def start(self,event=None):
            super().start(event)
            with open('test.npy', 'wb') as f:
                np.save(f, self.parent.patches)
    
    class SpiralForward(Forward):
        def start(self, event=None):
            startDistance = self.parent.startDistance
            deltaDistance = self.parent.deltaDistance
            iterVal = self.parent.iterVal
            self.distance = distance_mm(startDistance + deltaDistance*(iterVal//2))
            print(iterVal, self.distance)
            super().start(event)

    $setup{
        start: SetHeadAngle(-5) 
        start =C=> outer_loop

        outer_loop: Iterate(50)
        outer_loop =D=> grab =C=> move_spiral
        outer_loop =C=> save

        grab: self.GrabPatch()
        move_spiral: self.SpiralForward() =C=> Turn(90) =T(2)=> Say('Taking Patch') =CNext=> outer_loop
        save: self.SavePatches()
    }