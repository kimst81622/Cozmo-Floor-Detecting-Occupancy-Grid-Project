from cozmo_fsm import *

class GroundTest(StateMachineProgram):
  def __init__(self):
    super().__init__(viewer_crosshairs=True, particle_viewer=True)

  def start(self):
    super().start()
    robot.camera.color_image_enabled = True

  class ProjectToGround(StateNode):
    def start(self,event=None):
      super().start(event)
      camera_center = (320/2, 240/2)
      point = self.robot.kine.project_to_ground(*camera_center)
      print('Camera center point is at %4.1f, %4.1f' % (point[0], point[1]))

  class GrabPatch(StateNode):
    def start(self,event=None):
      super().start(event)
      img = np.array(self.robot.world.latest_image.raw_image)
      self.parent.patch = img[115:125, 155:165, :]
      patch2 = cv2.cvtColor(self.parent.patch, cv2.COLOR_RGB2BGR)
      cv2.imshow('patch',patch2)
      cv2.waitKey(0)

  class MatchPatch(StateNode):
    def start(self,event=None):
      super().start(event)
      img = np.array(self.robot.world.latest_image.raw_image)
      sample = img[115:125, 155:165, :]
      diff = ((sample - self.parent.patch).flatten()**2).sum()
      print('Match error =', diff)
      sample2 = cv2.cvtColor(sample, cv2.COLOR_RGB2BGR)
      cv2.imshow('sample',sample2)
      cv2.waitKey(0)

  $setup{
    dispatch: StateNode()
    dispatch =TM('p')=> project
    dispatch =TM('g')=> grab
    dispatch =TM('m')=> match

    project: self.ProjectToGround() =N=> dispatch

    grab: self.GrabPatch() =N=> dispatch

    match: self.MatchPatch() =N=> dispatch

  }